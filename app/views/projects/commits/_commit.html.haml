%li.commit
  .commit-row-title
    = link_to commit.short_id(8), project_commit_path(project, commit), class: "commit_short_id"
    &nbsp;
    = link_to_gfm truncate(commit.title, length: 70), project_commit_path(project, commit.id), class: "commit-row-message"
    = link_to "Browse Code Â»", project_tree_path(project, commit), class: "pull-right"
    .notes_count
      - notes = project.notes.for_commit_id(commit.id)
      - if notes.any?
        %span.badge.badge-info
          %i.icon-comment
          = notes.count

    - if defined?(build_status) && build_status.present?
      .build_status.pull-right
        .badge{class: "badge-#{ci_build_status_class(build_status.state)}"}
          %i{class: ci_build_status_image(build_status.state)}
      .build_status_additional.pull-right{"data-no-turbolink" => "true"}
        .badge
          %i.icon-info-sign
        .build-info
          - if build_status.duration
            %p
              Duration:
              = build_status.duration.strftime('%H:%M:%S')
          - if build_status.build_time
            %p
              Build time:
              = build_status.build_time.strftime('%Y-%m-%d %H:%M:%S')
          - if build_status.failed_count > 0
            %p
              Failed:
              = build_status.failed_count
          %p
            = link_to 'Build log', [project, build_status], target: 'blank'

          - if build_status.can_rebuild?
            = form_tag rebuild_project_ci_build_path(project, build_status), method: :post, remote: true do |f|
              %i.icon-repeat
                = submit_tag 'rebuild'


  .commit-row-info
    = commit_author_link(commit, avatar: true, size: 16)
    %time.committed_ago{ datetime: commit.committed_date, title: commit.committed_date.stamp("Aug 21, 2011 9:23pm") }
      = time_ago_in_words(commit.committed_date)
      ago
      &nbsp;

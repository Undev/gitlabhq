- entities.each do |relation|
  %li{ class: "#{dom_class(relation)} js-toggle-container", id: dom_id(relation) }

    - group = relation.entity
    - available_options = Group.watched_titles
    - source_descriptions = Group.watched_descriptions
    - options = relation.active_sources

    .summary-entity-actions.pull-right
      = link_to "#", class: "btn-tiny btn js-toggle-button", title: 'Edit access level' do
        Edit
      = link_to profile_summary_group_path(summary.id, relation.id), class: "btn-tiny btn btn-danger", data: { confirm: "You are shure?" }, method: :delete do
        Remove

    .summary-entity-name
      = link_to group.name, group_path(group.path)

    .summary-entity-info
      = options.map {|o| available_options[o] }.join(", ")

      .edit-member.hide.js-toggle-content
        = form_for relation, url: profile_summary_group_path(summary, relation), method: :put do |f|
          - available_options.each do |key, val|

            .js-toggle-sub-container
              .col-sm-2
                %span.has_bottom_tooltip{"data-original-title" => source_descriptions[key] }
                  = f.check_box :options, { multiple: true, checked: (options.include?(key) || options.empty?) }, key
                  = val

              .pull-left
                = link_to '#', id: dom_id(relation, "toggle_edit_actions_form"), class: "btn-tiny btn js-toggle-sub-button", title: 'Edit actions' do
                  %i.icon-edit

              .col-sm-6
                .edit-actions.hide.js-toggle-sub-content
                  - options_actions = relation.active_actions_for_source(key)
                  - source_actions(group, key).each do |action|

                    .col-sm-12
                      = f.check_box :"options_#{key}_actions", { multiple: true, checked: (options_actions.include?(action) || options_actions.empty?) }, action
                      = action.to_s.humanize

            .clearfix
          = f.submit 'Save', class: 'btn btn-save'
          %br
